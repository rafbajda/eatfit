// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Application snapshot renders component 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    className="sc-bdVaJa bDWFJH"
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        Object {
          "flex": 1,
          "justifyContent": "center",
        },
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <View
          animating={true}
          animationDuration={600}
          animationEasing={[Function]}
          color="#1db954"
          interaction={true}
          renderComponent={[Function]}
          style={
            Object {
              "height": 200,
              "width": 250,
            }
          }
        >
          <View
            style={
              Object {
                "height": 100,
                "left": 0,
                "position": "absolute",
                "top": 50,
                "transform": Array [
                  Object {
                    "rotate": "0deg",
                  },
                ],
                "width": 100,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "height": 50,
                  "overflow": "hidden",
                  "width": 100,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#1db954",
                    "borderRadius": 50,
                    "height": 100,
                    "width": 100,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "height": 100,
                "left": 0,
                "position": "absolute",
                "top": 50,
                "transform": Array [
                  Object {
                    "rotate": "0deg",
                  },
                ],
                "width": 100,
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "height": 50,
                  "overflow": "hidden",
                  "top": 50,
                  "width": 100,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#1db954",
                    "borderRadius": 50,
                    "height": 100,
                    "top": -50,
                    "width": 100,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#1db954",
                "borderRadius": 12.5,
                "height": 25,
                "left": 112.5,
                "position": "absolute",
                "top": 87.5,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
                "width": 25,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "#1db954",
                "borderRadius": 12.5,
                "height": 25,
                "left": 162.5,
                "position": "absolute",
                "top": 87.5,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
                "width": 25,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "#1db954",
                "borderRadius": 12.5,
                "height": 25,
                "left": 212.5,
                "opacity": 0,
                "position": "absolute",
                "top": 87.5,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "scale": 0,
                  },
                ],
                "width": 25,
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
    >
      <View
        accessible={true}
        focusable={false}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "maxHeight": 667,
            "minHeight": 56,
            "opacity": 1,
            "padding": 15,
          }
        }
      >
        <RCTScrollView
          data={Array []}
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Array [
              Object {
                "marginHorizontal": -15,
              },
              Object {
                "marginTop": 0,
              },
            ]
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;
