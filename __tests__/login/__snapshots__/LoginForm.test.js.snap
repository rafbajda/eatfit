// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginForm snapshot renders component 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentContainerStyle={
    Array [
      Object {
        "padding": undefined,
      },
      undefined,
    ]
  }
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={true}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardShouldPersistTaps="handled"
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  resetScrollToCoords={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  style={
    Object {
      "backgroundColor": "transparent",
      "flex": 1,
    }
  }
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <View
      className="sc-bxivhb dulVTN"
      style={
        Object {
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <View
        className="sc-EHOje esQQGS"
        style={
          Array [
            Object {},
            null,
          ]
        }
      >
        <View
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderBottomWidth": 1,
              "borderColor": "#D9D5DC",
              "borderLeftWidth": 1,
              "borderRadius": undefined,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "borderWidth": undefined,
              "flexDirection": "row",
              "marginLeft": 0,
              "opacity": 1,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            editable={true}
            keyboardType="email-address"
            onBlur={[Function]}
            onChangeText={[Function]}
            placeholder="[missing \\"en.placeholders.email\\" translation]"
            placeholderTextColor="#575757"
            rejectResponderTermination={true}
            style={
              Object {
                "color": "#000",
                "flex": 1,
                "fontSize": 17,
                "height": 50,
                "paddingLeft": 8,
                "paddingRight": 5,
                "top": 1.5,
              }
            }
            underlineColorAndroid="rgba(0,0,0,0)"
          />
        </View>
        <Text
          className="sc-gzVnrw iqTgrQ"
          style={
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          uppercase={false}
        />
        <View
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderBottomWidth": 1,
              "borderColor": "#D9D5DC",
              "borderLeftWidth": 1,
              "borderRadius": undefined,
              "borderRightWidth": 1,
              "borderTopWidth": 1,
              "borderWidth": undefined,
              "flexDirection": "row",
              "marginLeft": 0,
              "opacity": 1,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            editable={true}
            onBlur={[Function]}
            onChangeText={[Function]}
            placeholder="[missing \\"en.placeholders.password\\" translation]"
            placeholderTextColor="#575757"
            rejectResponderTermination={true}
            secureTextEntry={true}
            style={
              Object {
                "color": "#000",
                "flex": 1,
                "fontSize": 17,
                "height": 50,
                "paddingLeft": 8,
                "paddingRight": 5,
                "top": 1.5,
              }
            }
            underlineColorAndroid="rgba(0,0,0,0)"
          />
        </View>
        <Text
          className="sc-gzVnrw iqTgrQ"
          style={
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          uppercase={false}
        />
        <Text
          className="sc-gZMcBi coeZUP"
          onPress={[Function]}
          style={
            Object {
              "color": "#000",
              "fontFamily": "System",
              "fontSize": 16,
            }
          }
          uppercase={false}
        >
          [missing "en.actions.forgotPassword" translation]
        </Text>
      </View>
    </View>
    <View
      className="sc-bxivhb dulVTN"
      style={
        Object {
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#007aff",
            "borderBottomWidth": null,
            "borderColor": "#007aff",
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "borderWidth": undefined,
            "elevation": 2,
            "flexDirection": "row",
            "height": 45,
            "justifyContent": "space-between",
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "#fff",
              "fontFamily": "System",
              "fontSize": 16.5,
              "marginLeft": 0,
              "marginRight": 0,
              "paddingLeft": 16,
              "paddingRight": 16,
            }
          }
          uppercase={false}
        >
          [missing "en.buttons.login" translation]
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
